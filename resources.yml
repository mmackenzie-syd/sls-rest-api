# Notes dynamodb table
notesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: notes-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    AttributeDefinitions: 
      - AttributeName: notesId
        AttributeType: S
    KeySchema:
      - AttributeName: notesId
        KeyType: HASH

# Cognito user pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties: 
    UserPoolName: MarkNotesUP-${self:provider.stage}

# User pool web client
userPoolClient:
  Type: AWS::Cognito::UserPoolClient
  Properties: 
    ClientName: web
    UserPoolId: !Ref cognitoUserPool
    AllowedOAuthFlowsUserPoolClient: true
    AllowedOAuthScopes:
      - phone
      - email
      - profile
      - openid
    AllowedOAuthFlows: 
      - implicit
    CallbackURLs:
      - https://localhost:3000
    SupportedIdentityProviders:
     - COGNITO

# User pool domain
cognitoUserPoolDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties: 
    Domain: marknotesup-${self:provider.stage}
    UserPoolId: !Ref cognitoUserPool

# Application parameters
userPoolArnParam:
  Type: AWS::SSM::Parameter
  Properties: 
    Name: /notes/${self:provider.stage}/userPoolArn
    Type: String
    Value: !GetAtt cognitoUserPool.Arn